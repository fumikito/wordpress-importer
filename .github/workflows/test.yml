name: Test

on:
  # Run on all pushes and on all pull requests.
  # Prevent the build from running when there are only irrelevant changes.
  push:
    paths-ignore:
      - '**.md'
      - '**.txt'
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.txt'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0']
        wp: ['latest', '3.7']
        experimental: [false]

        include:
          # As support for PHP < 5.6 was dropped in WP 5.2, PHP 5.3 - 5.5 can only be tested against WP < 5.2.
          # Complement the builds run via the matrix with high/low WP builds for PHP 5.3 - 5.5.
          - php: '5.5'
            wp: '5.1'
            experimental: false
          - php: '5.5'
            wp: '3.7'
            experimental: false
          - php: '5.4'
            wp: '5.1'
            experimental: false
          - php: '5.4'
            wp: '3.7'
            experimental: false
          - php: '5.3'
            wp: '5.1'
            experimental: false
          - php: '5.3'
            wp: '3.7'
            experimental: false

          # Complement the builds run via the matrix with some additional builds against specific WP versions.
          - php: '7.4'
            wp: '5.4'
            experimental: false
          - php: '7.3'
            wp: '5.3'
            experimental: false
          - php: '7.2'
            wp: '5.2'
            experimental: false
          - php: '7.1'
            wp: '4.6'
            experimental: false
          - php: '7.0'
            wp: '4.3'
            experimental: false
          - php: '5.6'
            wp: '4.0'
            experimental: false
          - php: '5.6'
            wp: '5.5'
            experimental: false
          - php: '5.5'
            wp: '4.5'
            experimental: false
          - php: '5.4'
            wp: '5.0'
            experimental: false
          - php: '5.3'
            wp: '4.9'
            experimental: false

          # Experimental builds. These are allowed to fail.
          - php: '7.4'
            wp: 'trunk'
            experimental: true

          - php: '8.1'
            wp: 'trunk'
            experimental: true

    name: "Test: PHP ${{ matrix.php }} - WP ${{ matrix.wp }}"

    continue-on-error: ${{ matrix.experimental }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: importer_test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none

      - name: Start mysql service
        run: sudo /etc/init.d/mysql start

      - name: Set up WordPress
        run: phpunit/install.sh wordpress_test root root 127.0.0.1 ${{ matrix.wp }}

      - name: 'Composer: set up PHPUnit for PHP < 8.0'
        if: ${{ matrix.php < 8.0 }}
        run: composer require --no-update phpunit/phpunit:"4.8.*||5.7.*||6.5.*||7.5.*"

      - name: 'Composer: set up PHPUnit for PHP >= 8.0'
        if: ${{ matrix.php >= 8.0 }}
        run: composer require --no-update phpunit/phpunit:"7.5.*" --ignore-platform-reqs

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies for PHP < 8.0
        if: ${{ matrix.php < 8.0 }}
        uses: "ramsey/composer-install@v1"

      # For the PHP 8.0 and above, we need to install with ignore platform reqs as not all dependencies allow it yet.
      - name: Install Composer dependencies for PHP >= 8.0
        if: ${{ matrix.php >= 8.0 }}
        uses: "ramsey/composer-install@v1"
        with:
          composer-options: --ignore-platform-reqs

      - name: Run the unit tests - single site
        run: vendor/bin/phpunit

      - name: Run the unit tests - multi site
        run: vendor/bin/phpunit
        env:
          WP_MULTISITE: 1
